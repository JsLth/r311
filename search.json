[{"path":"https://jslth.github.io/r311/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 r311 authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jslth.github.io/r311/articles/r311.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"r311: An R interface to the open311 standard","text":"open311 international open-access standard civic issue management public service communication. standard allows administrations better manage citizen requests, citizens easily participate administrative work, researchers data scientists access data regarding public service communication. open standard, open311 centralized API, framework implemented various cities (e.g. San Francisco, CA, Chicago, IL, Cologne, DE, Turku, FI, Zurich, CH) services (e.g. SeeClickFix, FixMyStreet). way past golden age open311 APIs much development civic issue tracking shifted less open-access less standardized alternatives. Many former prime examples abandoned severely limited open311 endpoints. Nonetheless, open311 still constitutes valuable source open government data. Many cities services still maintain open311 service. r311 allows seamless management selection endpoints retrieval service request data. supports (depend ) many popular R frameworks tidyverse, sf xml2 response formatting. r311 designed slim, content dependencies. imports two import-less packages used HTTP response handling. functionality limited two main features: Endpoint management Sending requests vignette briefly cover two features.","code":""},{"path":"https://jslth.github.io/r311/articles/r311.html","id":"endpoints","dir":"Articles","previous_headings":"","what":"Endpoints","title":"r311: An R interface to the open311 standard","text":"Since open311 open decentralized standard, one many endpoints one can access. endpoint commonly implemented city administration, can also managed service provider FixMyStreet. endpoint can define multiple jurisdiction IDs, although, practice, endpoints define single jurisdiction. can thus difficult manage multitude endpoints jurisdictions. Efforts made list open311 servers, incomplete outdated. r311 offers updated modifiable endpoint list defines number open311 implementations defined use package. list can read using o311_endpoints. list neither claim comprehensiveness --dateness. arguably provides important easily accessible endpoints 2024. However, r311 also offers ability add new endpoints o311_endpoints using o311_add_endpoint. need provide name (lookup) root URL (URL used send requests). following code adds open311 test server Rostock, Germany. Retrieving endpoints list confirms successfully added new row endpoints dataframe. can now select Rostock test API session using o311_api. function matches API using endpoint name jurisdiction ID attaches active session. Query functions automatically detect attached API. attaching API, o311_ok confirms selected endpoint able handle request queries. result , can safely start receiving real request data.","code":"o311_endpoints() #> # A tibble: 66 × 9 #>    name            root  docs  jurisdiction key   pagination limit json  dialect #>    <chr>           <chr> <chr> <chr>        <lgl> <lgl>      <int> <lgl> <chr>   #>  1 Annaberg-Buchh… http… http… annberg-buc… FALSE TRUE          50 TRUE  Mark-a… #>  2 Bloomington, IN http… NA    bloomington… FALSE TRUE        1000 TRUE  uReport #>  3 Bonn, DE        http… http… bonn.de      FALSE TRUE         100 TRUE  Mark-a… #>  4 Boston, MA      http… http… NA           FALSE TRUE          50 TRUE  Connec… #>  5 Brookline, MA   http… http… brooklinema… FALSE TRUE          50 TRUE  Connec… #>  6 Austin, TX      http… http… NA           FALSE TRUE          50 TRUE  Connec… #>  7 Chicago, IL     http… http… cityofchica… FALSE TRUE          50 TRUE  Connec… #>  8 Newport News, … http… http… cityofnewpo… FALSE TRUE          50 TRUE  Connec… #>  9 San Diego, CA   http… http… sandiego.gov FALSE TRUE          50 TRUE  Connec… #> 10 Köln / Cologne… http… NA    stadt-koeln… FALSE TRUE          50 TRUE  Mark-a… #> # ℹ 56 more rows o311_add_endpoint(   name = \"Rostock Test\",   root = \"https://demo.klarschiff-hro.de/backoffice/citysdk/\",   jurisdiction = \"rostock.de\" ) nrow(o311_endpoints()) #> [1] 67 o311_api(\"Rostock Test\") o311_ok() #> [1] TRUE"},{"path":"https://jslth.github.io/r311/articles/r311.html","id":"making-requests","dir":"Articles","previous_headings":"","what":"Making requests","title":"r311: An R interface to the open311 standard","text":"selecting API attaching session, functions can access . can now make requests.","code":""},{"path":"https://jslth.github.io/r311/articles/r311.html","id":"services","dir":"Articles","previous_headings":"Making requests","what":"Services","title":"r311: An R interface to the open311 standard","text":"get overview available services jurisdiction, can use o311_services, returns list Rostock’s administrative services.","code":"o311_services() #> # A tibble: 161 × 8 #>    service_code service_name  description metadata type  keywords group group_id #>    <chr>        <chr>         <lgl>       <lgl>    <chr> <chr>    <chr>    <int> #>  1 86           Ampel behind… NA          FALSE    real… idea     Barr…      115 #>  2 87           Ampelschaltu… NA          FALSE    real… idea     Barr…      115 #>  3 88           Bordstein ab… NA          FALSE    real… idea     Barr…      115 #>  4 89           Zugang rolls… NA          FALSE    real… idea     Barr…      115 #>  5 90           Ampelschaltu… NA          FALSE    real… idea     Fahr…      120 #>  6 91           Beleuchtung … NA          FALSE    real… idea     Fahr…      120 #>  7 92           Beschilderun… NA          FALSE    real… idea     Fahr…      120 #>  8 93           Beschilderun… NA          FALSE    real… idea     Fahr…      120 #>  9 94           Bordstein ab… NA          FALSE    real… idea     Fahr…      120 #> 10 95           Fahrradständ… NA          FALSE    real… idea     Fahr…      120 #> # ℹ 151 more rows"},{"path":"https://jslth.github.io/r311/articles/r311.html","id":"requests","dir":"Articles","previous_headings":"Making requests","what":"Requests","title":"r311: An R interface to the open311 standard","text":"get data civic issues city area, run o311_requests. Using output o311_services, can narrow output requests. Open311 defines set standard parameters implemented endpoints. Using service_code parameter one previously returned service codes, complaints businesses illegally using shared spaces returned. Similarly, using service_request_id output, can retrieve single service request API.","code":"o311_requests() #> Simple feature collection with 6 features and 15 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 12.07615 ymin: 54.06731 xmax: 12.23699 ymax: 54.2091 #> Geodetic CRS:  WGS 84 #> # A tibble: 6 × 16 #>   service_request_id status_notes status   service_code service_name description #>                <int> <chr>        <chr>           <int> <chr>        <chr>       #> 1                  3 \"\"           in_proc…           16 Grünschnitt… Dieser Wei… #> 2                  2 \"\"           in_proc…           60 Sitzgelegen… Dieser Sit… #> 3                  5 \"\"           closed             62 Ampel schad… Die Ampel … #> 4                  6 \"\"           reviewed          110 Spielplatz … Hier sollt… #> 5                  4 \"\"           closed            129 Papierkorb/… Dieser Abf… #> 6                  1 \"\"           in_proc…          160 Altfahrzeug… Das Schrot… #> # ℹ 10 more variables: agency_responsible <chr>, service_notice <lgl>, #> #   requested_datetime <chr>, updated_datetime <chr>, expected_datetime <lgl>, #> #   address <chr>, adress_id <lgl>, media_url <chr>, zipcode <lgl>, #> #   geometry <POINT [°]> o311_requests(service_code = \"16\") #> Simple feature collection with 1 feature and 15 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 12.17547 ymin: 54.10655 xmax: 12.17547 ymax: 54.10655 #> Geodetic CRS:  WGS 84 #> # A tibble: 1 × 16 #>   service_request_id status_notes status   service_code service_name description #>                <int> <chr>        <chr>           <int> <chr>        <chr>       #> 1                  3 \"\"           in_proc…           16 Grünschnitt… Dieser Wei… #> # ℹ 10 more variables: agency_responsible <chr>, service_notice <lgl>, #> #   requested_datetime <chr>, updated_datetime <chr>, expected_datetime <lgl>, #> #   address <chr>, adress_id <lgl>, media_url <chr>, zipcode <lgl>, #> #   geometry <POINT [°]> o311_request(\"4\") #> Simple feature collection with 1 feature and 15 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 12.12266 ymin: 54.06731 xmax: 12.12266 ymax: 54.06731 #> Geodetic CRS:  WGS 84 #> # A tibble: 1 × 16 #>   service_request_id status_notes status service_code service_name   description #>                <int> <chr>        <chr>         <int> <chr>          <chr>       #> 1                  4 \"\"           closed          129 Papierkorb/Ab… Dieser Abf… #> # ℹ 10 more variables: agency_responsible <chr>, service_notice <lgl>, #> #   requested_datetime <chr>, updated_datetime <chr>, expected_datetime <lgl>, #> #   address <chr>, adress_id <lgl>, media_url <chr>, zipcode <lgl>, #> #   geometry <POINT [°]>"},{"path":"https://jslth.github.io/r311/articles/r311.html","id":"bulk-queries","dir":"Articles","previous_headings":"Making requests","what":"Bulk queries","title":"r311: An R interface to the open311 standard","text":"Many endpoints define page limit meaning responses divided pages. query without parameters returns first page. Pagination can controlled page argument. control pagination, o311_request_all function can come handy. automatically iterates pages heuristically decides stop. following example retrieves data first two pages, resulting tibble 100 service requests.","code":"o311_api(\"Rostock, DE\") o311_request_all(max_pages = 2) #> Simple feature collection with 4253 features and 15 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 12.01306 ymin: 54.05571 xmax: 12.20568 ymax: 54.20905 #> Geodetic CRS:  WGS 84 #> # A tibble: 4,253 × 16 #>    service_request_id status_notes  status service_code service_name description #>                 <int> <chr>         <chr>         <int> <chr>        <chr>       #>  1              24824 \"\"            in_pr…          113 Beschilderu… Kreuzung A… #>  2              95322 \"Danke für I… in_pr…            2 bauliche Ge… Gefährlich… #>  3              70677  NA           recei…            2 bauliche Ge… redaktione… #>  4              72069  NA           recei…           22 Sperrmüll    redaktione… #>  5              72070  NA           recei…           15 Elektroschr… redaktione… #>  6              70740  NA           revie…           22 Sperrmüll    Die 1.Meld… #>  7              70076  NA           closed          160 Altfahrzeug… NA          #>  8              75356  NA           recei…           17 Hausmüll     redaktione… #>  9              43518 \"Der Erdhauf… in_pr…           13 Bauabfall    Illegale E… #> 10              44333  NA           recei…            2 bauliche Ge… redaktione… #> # ℹ 4,243 more rows #> # ℹ 10 more variables: agency_responsible <chr>, service_notice <lgl>, #> #   requested_datetime <chr>, updated_datetime <chr>, expected_datetime <chr>, #> #   address <chr>, adress_id <lgl>, media_url <chr>, zipcode <lgl>, #> #   geometry <POINT [°]>"},{"path":"https://jslth.github.io/r311/articles/r311.html","id":"non-standard-parameters","dir":"Articles","previous_headings":"Making requests","what":"Non-standard parameters","title":"r311: An R interface to the open311 standard","text":"r311 implicitly supports API extensions introducing custom paths parameters. One API Klarschiff Rostock based CitySDK. Klarschiff CitySDK defines number non-default paths parameters extend filtering abilities open311 requests. Available parameters can usually found respective documentation (e.g. GitHub Klarschiff CitySDK). following query returns last 50 requests tagged “idea” keyword. custom parameters can also alter shape output. following example, query just count total requests using just_count parameter. result 1×1 tibble containing count value. CitySDK extensions also offers additional URL paths can queried using generic o311_query function.","code":"tickets <- o311_requests(keyword = \"idea\", max_requests = 50) o311_requests(just_count = TRUE) #> # A tibble: 1 × 1 #>   value #>   <int> #> 1  4253 poly <- o311_query(\"areas\") plot(poly$grenze) plot(tickets$geometry, add = TRUE, pch = 16)"},{"path":"https://jslth.github.io/r311/articles/r311.html","id":"cleanup","dir":"Articles","previous_headings":"","what":"Cleanup","title":"r311: An R interface to the open311 standard","text":"Endpoint data stored persistently sessions can create database open311 endpoints. database stored system’s user directory returned tools::R_user_dir(\"r311\"). reset database, run default back endpoints defined r311 remove endpoints manually added o311_add_endpoints.","code":"o311_reset_endpoints()"},{"path":"https://jslth.github.io/r311/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jonas Lieth. Author, maintainer, copyright holder.","code":""},{"path":"https://jslth.github.io/r311/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lieth J (2024). r311: R Interface 'open311' standard. R package version 0.3.5, https://jslth.github.io/r311/, https://github.com/JsLth/r311, https://github.com/jslth/r311.","code":"@Manual{,   title = {r311: R Interface to the 'open311' standard},   author = {Jonas Lieth},   year = {2024},   note = {R package version 0.3.5, https://jslth.github.io/r311/, https://github.com/JsLth/r311},   url = {https://github.com/jslth/r311}, }"},{"path":"https://jslth.github.io/r311/index.html","id":"r311","dir":"","previous_headings":"","what":"R Interface to the open311 standard","title":"R Interface to the open311 standard","text":"r311 R interface international standard open311. Open311 APIs used civic issue management public service communication. standard allows administrations better manage citizen requests, citizens easily submit requests, (hence package) researchers data scientists access data regarding public service communication. r311 supports seamless management supplementation available endpoints, selection appropriate APIs access, retrieval civic service request data. Custom queries extensions (e.g. CitySDK) implicitly supported. r311 designed require minimal amount dependencies, allow easy integration common R frameworks tidyverse, sf xml2.","code":""},{"path":"https://jslth.github.io/r311/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R Interface to the open311 standard","text":"can install r311 CRAN : can install development version GitHub :","code":"install.packages(\"r311\") # install.packages(\"remotes\") remotes::install_github(\"JsLth/r311\")"},{"path":"https://jslth.github.io/r311/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"R Interface to the open311 standard","text":"following example loads r311, sets jurisdiction retrieves small amount data service tickets Cologne, Germany.","code":"library(r311)  o311_api(\"Cologne\") o311_requests() #> Simple feature collection with 100 features and 11 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 6.833572 ymin: 50.84786 xmax: 7.098123 ymax: 51.05979 #> Geodetic CRS:  WGS 84 #> # A tibble: 100 × 12 #>    service_request_id title              description address_string service_name #>    <chr>              <chr>              <chr>       <chr>          <chr>        #>  1 8421-2024          #8421-2024 Schrot… \"An der Me… 50931 Köln - … Schrottfahr… #>  2 8422-2024          #8422-2024 Stadts… \"Hier wird… 51061 Köln - … Stadtsauber… #>  3 8423-2024          #8423-2024 Wilder… \"Sperrmüll… 50933 Köln - … Wilder Müll  #>  4 8424-2024          #8424-2024 Defekt… \"Zwischen … 50933 Köln - … Defekte Obe… #>  5 8425-2024          #8425-2024 Defekt… \"Mitten au… 50933 Köln - … Defekte Obe… #>  6 8426-2024          #8426-2024 Schrot… \"Heidestr.… 51069 Köln - … Schrott-Kfz  #>  7 8427-2024          #8427-2024 Defekt… \"mehrere g… 50737 Köln - … Defekte Obe… #>  8 8428-2024          #8428-2024 Schrot…  <NA>       50968 Köln - … Schrott-Kfz  #>  9 8429-2024          #8429-2024 Defekt… \"Auf dem G… 50825 Köln - … Defekte Obe… #> 10 8430-2024          #8430-2024 Wilder… \"In unsere… 50670 Köln - … Wilder Müll  #> # ℹ 90 more rows #> # ℹ 7 more variables: requested_datetime <chr>, updated_datetime <chr>, #> #   status <chr>, media_url <chr>, status_note <chr>, service_code <chr>, #> #   geometry <POINT [°]>"},{"path":"https://jslth.github.io/r311/reference/o311_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Select an open311 API — o311_api","title":"Select an open311 API — o311_api","text":"Select open311 API attach active session. open311 API implementation open311 standard. consists endpoint name (e.g. city), root URL, jurisdiction ID. unambiguously identify API, can provide endpoint, jurisdiction ID, . input matched o311_endpoints select API. selected API available o311_* functions session terminated overwritten.","code":""},{"path":"https://jslth.github.io/r311/reference/o311_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select an open311 API — o311_api","text":"","code":"o311_api(endpoint = NULL, jurisdiction = NULL, format = c(\"json\", \"xml\"))"},{"path":"https://jslth.github.io/r311/reference/o311_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select an open311 API — o311_api","text":"endpoint [character] Name endpoint runs open311 API. usually city, can provider open311 API. jurisdiction [character] ID jurisdiction served open311 API. jurisdiction ID usually root URL jurisdiction website, e.g. \"sandiego.gov\" San Diego. format [character] Response format. Must one \"json\" \"xml\". Defaults \"json\" simplification difficult unsafe xml2 objects. advisable use \"json\" whenever possible applicable. Additionally, \"xml\" requires xml2 package queries xmlconvert package simplification.","code":""},{"path":"https://jslth.github.io/r311/reference/o311_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select an open311 API — o311_api","text":"list containing important information given jurisdiction, invisibly. list attached session can retrieved calling o311_api() without arguments. Passing arguments returns currently attached API object.","code":""},{"path":"https://jslth.github.io/r311/reference/o311_api.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Select an open311 API — o311_api","text":"theory, several jurisdictions can exist single endpoints, e.g. region serves multiple jurisdictions. Similarly, multiple endpoints can exist single jurisdiction, e.g. provider set production test endpoints jurisdictions. Providing endpoint jurisdiction thus safe way identify API. default, handful endpoints supported. list currently supported endpoints, run o311_endpoints. can add non-default endpoints using o311_add_endpoint.","code":""},{"path":[]},{"path":"https://jslth.github.io/r311/reference/o311_api.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select an open311 API — o311_api","text":"","code":"# cities are matched using regex o311_api(\"Cologne\")  # passing a jurisdiction is more explicit o311_api(jurisdiction = \"stadt-koeln.de\")  # calls without arguments return the current API o311_api() #> <r311_api> #>  name         : Köln / Cologne, DE #>  root         : https://sags-uns.stadt-koeln.de/georeport/v2/ #>  docs         : None #>  jurisdiction : stadt-koeln.de #>  key          : FALSE #>  pagination   : TRUE #>  limit        : 50 #>  json         : TRUE #>  dialect      : Mark-a-Spot"},{"path":"https://jslth.github.io/r311/reference/o311_discovery.html","id":null,"dir":"Reference","previous_headings":"","what":"API discovery — o311_discovery","title":"API discovery — o311_discovery","text":"Retrieve discovery information mounted endpoint.","code":""},{"path":"https://jslth.github.io/r311/reference/o311_discovery.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"API discovery — o311_discovery","text":"","code":"o311_discovery()"},{"path":"https://jslth.github.io/r311/reference/o311_discovery.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"API discovery — o311_discovery","text":"list containing details given open311 API.","code":""},{"path":"https://jslth.github.io/r311/reference/o311_discovery.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"API discovery — o311_discovery","text":"","code":"o311_api(\"zurich\")  can_connect <- o311_ok() if (can_connect) {   o311_discovery() } #> $discovery #> $discovery$endpoints #> $discovery$endpoints[[1]] #> $discovery$endpoints[[1]]$changeset #> [1] \"2021-03-01T00:00:00Z\" #>  #> $discovery$endpoints[[1]]$url #> [1] \"https://www.zueriwieneu.ch/open311\" #>  #> $discovery$endpoints[[1]]$formats #> $discovery$endpoints[[1]]$formats[[1]] #> [1] \"text/xml\" #>  #> $discovery$endpoints[[1]]$formats[[2]] #> [1] \"application/json\" #>  #> $discovery$endpoints[[1]]$formats[[3]] #> [1] \"text/html\" #>  #>  #> $discovery$endpoints[[1]]$type #> [1] \"production\" #>  #> $discovery$endpoints[[1]]$specification #> [1] \"http://wiki.open311.org/GeoReport_v2\" #>  #>  #>  #> $discovery$changeset #> [1] \"2021-03-01T00:00:00Z\" #>  #> $discovery$max_requests #> [1] \"1000\" #>  #> $discovery$contact #> [1] \"Send email to zurich@fixmystreet.com.\" #>  #>"},{"path":"https://jslth.github.io/r311/reference/o311_endpoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Endpoints — o311_add_endpoint","title":"Endpoints — o311_add_endpoint","text":"Modify examine defined open311 endpoints. o311_endpoints() retrieves list endpoints including additional information. o311_add_endpoint adds list define new endpoint can used queries. o311_reset_endpoints restores initial state endpoints list.","code":""},{"path":"https://jslth.github.io/r311/reference/o311_endpoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Endpoints — o311_add_endpoint","text":"","code":"o311_add_endpoint(   name,   root,   jurisdiction = NULL,   key = FALSE,   pagination = FALSE,   limit = NULL,   json = TRUE,   dialect = NULL )  o311_reset_endpoints()  o311_endpoints(...)"},{"path":"https://jslth.github.io/r311/reference/o311_endpoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Endpoints — o311_add_endpoint","text":"name [character] Name endpoint / city. name can arbitrary serves identification [o311_api]. root [character] Base URL endpoint sending production-grade requests. root URL commonly points \"georeport/v2/\". jurisdiction [character] Unique identifier jurisdiction. jurisdiction typically defined domain respective city website. optional endpoints serve one jurisdiction. key [logical] API key mandatory? pagination [logical] requests responses paginated? limit [integer] paginated, many requests one page contain? json [logical] JSON responses supported? FALSE, defaults \"XML\" responses. See also o311_api. dialect [character] open311 extension endpoint built . Common dialects include CitySDK, Connected Bits, SeeClickFix Mark--Spot. Currently, argument nothing, used future adjust response handling based dialect. ... List key-value pairs pair filter. key represents column value requested column value. keys must present column names o311_endpoints().","code":""},{"path":"https://jslth.github.io/r311/reference/o311_endpoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Endpoints — o311_add_endpoint","text":"o311_endpoints, dataframe containing relevant information endpoint. o311_add_endpoint, new endpoint, invisibly. o311_reset_endpoints returns NULL invisibly. new endpoint duplicate, NULL returned invisibly.","code":""},{"path":"https://jslth.github.io/r311/reference/o311_endpoints.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Endpoints — o311_add_endpoint","text":"o311_endpoints() returns static list defined package installation directory. list contains limited number endpoints proven work time package development. include newer/smaller/less known endpoints test APIs. can manually added using o311_add_endpoint.","code":""},{"path":"https://jslth.github.io/r311/reference/o311_endpoints.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Endpoints — o311_add_endpoint","text":"function uses R_user_dir persistently store custom endpoints data sessions. set different directory, may use options(\"o311_user_dir\"). clean , run o311_reset_endpoints() deletes package-specific user directory defaults back system.file(\"endpoints.json\", package = \"r311\").","code":""},{"path":[]},{"path":"https://jslth.github.io/r311/reference/o311_endpoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Endpoints — o311_add_endpoint","text":"","code":"# read default endpoints o311_endpoints() #> # A tibble: 66 × 9 #>    name            root  docs  jurisdiction key   pagination limit json  dialect #>    <chr>           <chr> <chr> <chr>        <lgl> <lgl>      <int> <lgl> <chr>   #>  1 Annaberg-Buchh… http… http… annberg-buc… FALSE TRUE          50 TRUE  Mark-a… #>  2 Bloomington, IN http… NA    bloomington… FALSE TRUE        1000 TRUE  uReport #>  3 Bonn, DE        http… http… bonn.de      FALSE TRUE         100 TRUE  Mark-a… #>  4 Boston, MA      http… http… NA           FALSE TRUE          50 TRUE  Connec… #>  5 Brookline, MA   http… http… brooklinema… FALSE TRUE          50 TRUE  Connec… #>  6 Austin, TX      http… http… NA           FALSE TRUE          50 TRUE  Connec… #>  7 Chicago, IL     http… http… cityofchica… FALSE TRUE          50 TRUE  Connec… #>  8 Newport News, … http… http… cityofnewpo… FALSE TRUE          50 TRUE  Connec… #>  9 San Diego, CA   http… http… sandiego.gov FALSE TRUE          50 TRUE  Connec… #> 10 Köln / Cologne… http… NA    stadt-koeln… FALSE TRUE          50 TRUE  Mark-a… #> # ℹ 56 more rows  # get all endpoints powered by Connected Bits o311_endpoints(dialect = \"Connected Bits\") #> # A tibble: 7 × 9 #>   name             root  docs  jurisdiction key   pagination limit json  dialect #>   <chr>            <chr> <chr> <chr>        <lgl> <lgl>      <int> <lgl> <chr>   #> 1 Boston, MA       http… http… NA           FALSE TRUE          50 TRUE  Connec… #> 2 Brookline, MA    http… http… brooklinema… FALSE TRUE          50 TRUE  Connec… #> 3 Austin, TX       http… http… NA           FALSE TRUE          50 TRUE  Connec… #> 4 Chicago, IL      http… http… cityofchica… FALSE TRUE          50 TRUE  Connec… #> 5 Newport News, VA http… http… cityofnewpo… FALSE TRUE          50 TRUE  Connec… #> 6 San Diego, CA    http… http… sandiego.gov FALSE TRUE          50 TRUE  Connec… #> 7 San Francisco, … http… http… NA           FALSE TRUE          50 TRUE  Connec…  # add a new endpoint o311_add_endpoint(name = \"test\", root = \"test.org/georeport/v2\")  # read new endpoints o311_endpoints() #> # A tibble: 67 × 9 #>    name            root  docs  jurisdiction key   pagination limit json  dialect #>    <chr>           <chr> <chr> <chr>        <lgl> <lgl>      <int> <lgl> <chr>   #>  1 Annaberg-Buchh… http… http… annberg-buc… FALSE TRUE          50 TRUE  Mark-a… #>  2 Bloomington, IN http… NA    bloomington… FALSE TRUE        1000 TRUE  uReport #>  3 Bonn, DE        http… http… bonn.de      FALSE TRUE         100 TRUE  Mark-a… #>  4 Boston, MA      http… http… NA           FALSE TRUE          50 TRUE  Connec… #>  5 Brookline, MA   http… http… brooklinema… FALSE TRUE          50 TRUE  Connec… #>  6 Austin, TX      http… http… NA           FALSE TRUE          50 TRUE  Connec… #>  7 Chicago, IL     http… http… cityofchica… FALSE TRUE          50 TRUE  Connec… #>  8 Newport News, … http… http… cityofnewpo… FALSE TRUE          50 TRUE  Connec… #>  9 San Diego, CA   http… http… sandiego.gov FALSE TRUE          50 TRUE  Connec… #> 10 Köln / Cologne… http… NA    stadt-koeln… FALSE TRUE          50 TRUE  Mark-a… #> # ℹ 57 more rows  # reset endpoints back to default o311_reset_endpoints()"},{"path":"https://jslth.github.io/r311/reference/o311_ok.html","id":null,"dir":"Reference","previous_headings":"","what":"Is open311 API ok? — o311_ok","title":"Is open311 API ok? — o311_ok","text":"Checks whether open311 API mounted o311_api reachable returns valid requests response.","code":""},{"path":"https://jslth.github.io/r311/reference/o311_ok.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is open311 API ok? — o311_ok","text":"","code":"o311_ok(error = FALSE)"},{"path":"https://jslth.github.io/r311/reference/o311_ok.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is open311 API ok? — o311_ok","text":"error [logical] Whether return logical error message describing API ok.","code":""},{"path":"https://jslth.github.io/r311/reference/o311_ok.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is open311 API ok? — o311_ok","text":"logical describing whether API reachable . error = TRUE, returns corresponding error object one occurs.","code":""},{"path":"https://jslth.github.io/r311/reference/o311_ok.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is open311 API ok? — o311_ok","text":"","code":"# check if Bonn API is reachable o311_api(\"Bonn\") o311_ok() #> [1] TRUE  # check if Helsinki API is reachable - fails o311_add_endpoint(   name = \"Helsinki\",   root = \"asiointi.hel.fi/palautews/rest/v1/\" )  o311_api(\"Helsinki\") o311_ok() #> [1] FALSE  # return error message try(o311_ok(error = TRUE)) #> <o311_type_error in check_content_type(resp, type): Unexpected content type “text/html; charset=UTF-8”>  # reset endpoints database o311_reset_endpoints()"},{"path":"https://jslth.github.io/r311/reference/o311_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Query an open311 endpoint — o311_query","title":"Query an open311 endpoint — o311_query","text":"Low-level function perform generic request API currently attached o311_api. open311 implementations support unique operations included official documentation. function can used access URL paths.","code":""},{"path":"https://jslth.github.io/r311/reference/o311_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query an open311 endpoint — o311_query","text":"","code":"o311_query(path, ..., simplify = TRUE)"},{"path":"https://jslth.github.io/r311/reference/o311_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query an open311 endpoint — o311_query","text":"path Path appendix used access endpoint-specific operations. ... Additional query parameters. simplify Whether simplify output using jsonlite::toJSON(..., simplify = TRUE).","code":""},{"path":"https://jslth.github.io/r311/reference/o311_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query an open311 endpoint — o311_query","text":"parsed query output, either list dataframe.","code":""},{"path":"https://jslth.github.io/r311/reference/o311_query.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Query an open311 endpoint — o311_query","text":"can set options(r311_echo = TRUE) display requests sent using o311_query.","code":""},{"path":"https://jslth.github.io/r311/reference/o311_query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query an open311 endpoint — o311_query","text":"","code":"if (FALSE) { # \\dontrun{ o311_api(\"rostock\")  # manually query discovery o311_query(path = \"discovery\", simplify = FALSE)  # query a custom path defined by the Klarschiff API o311_query(path = \"areas\") } # }"},{"path":"https://jslth.github.io/r311/reference/o311_requests.html","id":null,"dir":"Reference","previous_headings":"","what":"Get civic service request data — o311_requests","title":"Get civic service request data — o311_requests","text":"Get civic service request data registered open311 endpoint. o311_request queries single service request ID. o311_requests queries single page service requests. o311_request_all tries iterate pages endpoint return complete dataset service requests.","code":""},{"path":"https://jslth.github.io/r311/reference/o311_requests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get civic service request data — o311_requests","text":"","code":"o311_requests(   service_code = NULL,   start_date = NULL,   end_date = NULL,   status = NULL,   page = NULL,   ... )  o311_request(service_request_id, ...)  o311_request_all(   service_code = NULL,   start_date = NULL,   end_date = NULL,   status = NULL,   ...,   max_pages = Inf,   progress = TRUE )"},{"path":"https://jslth.github.io/r311/reference/o311_requests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get civic service request data — o311_requests","text":"service_code [character] IDs service types queried. Defaults available codes endpoint. list available service codes can retrieved using o311_services. start_date, end_date [POSIXt] Start date end date query results. Must date-time objects. specified, defaults last 90 days. status [character] Status public service ticket. Can one \"open\" \"closed\". NULL, returns types tickets. page [integer] Page response. endpoints paginate responses way limited number tickets returned query. retrieve data, consider using o311_request_all. ... endpoint-specific parameters documented respective endpoint reference. service_request_id [character] Identifier single service request. Request IDs can usually retrieved o311_requests. max_pages [integer] Number pages search result returned. progress [logical] Whether show waiter indicating current page iteration.","code":""},{"path":"https://jslth.github.io/r311/reference/o311_requests.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get civic service request data — o311_requests","text":"dataframe containing data civic service requests. dataframe can contain varying columns depending open311 implementation.","code":""},{"path":"https://jslth.github.io/r311/reference/o311_requests.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get civic service request data — o311_requests","text":"o311_request_all applies number checks determine stop searching. First, many endpoints return error last page exceeded. Thus, last page request failed, break. Second, exceeding pagination limit return error, response compared previous response. identical, response discarded previous responses returned. Finally, page exceeds max_pages, responses point returned. open311 leaves space endpoints implement request parameters. parameters can provided using dot arguments. arguments validated pre-processed. Date-time objects must formatted according w3c standard. common parameters include: q: Perform text search across requests. update_after/updated_before: Limit request according  request update dates. per_page: Specifiy maximum number requests per page. extensions: Adds nested attribute  \"extended_attributes\" response. long/lat/radius: Searches requests fixed radius  around coordinate. dot arguments deviate open311 standard, guaranteed available every endpoint might removed without notice. Refer endpoint docs learn custom parameters (o311_endpoints()$docs).","code":""},{"path":[]},{"path":"https://jslth.github.io/r311/reference/o311_requests.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get civic service request data — o311_requests","text":"","code":"o311_api(\"zurich\")  can_connect <- o311_ok() if (can_connect) {   # retrieve requests from the last two days   now <- Sys.time()   two_days <- 60 * 60 * 24 * 2   o311_requests(end_date = now, start_date = now - two_days)    # retrieve only open tickets   tickets <- o311_requests(status = \"open\")    # request the first ticket of the previous response   rid <- as.character(tickets$service_request_id[1])   o311_request(rid)    # request all data   o311_request_all()    # request data of the first 5 pages   o311_request_all(max_pages = 5) } #> Receiving page 4... Receiving page 5... Receiving page 6... Receiving page 7... Receiving page 8... Receiving page 9... Receiving page 10... Receiving page 11... Receiving page 12... Receiving page 13... Receiving page 14... Receiving page 15... Receiving page 16... Receiving page 17... Receiving page 18... Receiving page 19... Receiving page 20... Receiving page 21... Receiving page 22... Receiving page 23... Receiving page 24... Receiving page 25... Receiving page 26... Receiving page 27... Receiving page 28... Receiving page 29... Receiving page 30... Receiving page 31... Receiving page 32... Receiving page 33... Receiving page 34... Receiving page 35... Receiving page 36... Receiving page 37... Receiving page 38... Receiving page 39... Receiving page 40... Receiving page 41... Receiving page 42... Receiving page 43... Receiving page 44... Receiving page 45... Receiving page 46... Receiving page 47... Receiving page 48... Receiving page 49... Receiving page 50... Receiving page 51... Receiving page 52... Receiving page 53... Receiving page 54... Receiving page 55... Receiving page 56... Receiving page 57... Receiving page 58... Receiving page 59... Receiving page 60... Receiving page 61... Receiving page 62... Receiving page 63... Receiving page 64... Receiving page 65... Receiving page 66... Receiving page 67... Receiving page 68... Receiving page 69... Receiving page 70... Receiving page 71... Receiving page 72... Receiving page 73... Receiving page 74... Receiving page 75... Receiving page 76... Receiving page 77... Receiving page 78... Receiving page 79... Receiving page 80... Receiving page 81... Receiving page 82... Receiving page 83... Receiving page 84... Receiving page 85... Receiving page 86... Receiving page 87... Receiving page 88... Receiving page 89... Receiving page 90... Receiving page 91... Receiving page 92... Receiving page 93... Receiving page 94... Receiving page 95... Receiving page 96... Receiving page 97... Receiving page 98... Receiving page 99... Receiving page 100... Receiving page 101... Receiving page 102... Receiving page 103... Receiving page 104... Receiving page 105... Receiving page 106... Receiving page 107... Receiving page 108... Receiving page 109... Receiving page 110... Receiving page 111... Receiving page 112... Receiving page 113... Receiving page 114... Receiving page 115... Receiving page 116... Receiving page 117... Receiving page 118... Receiving page 119... Receiving page 120... Receiving page 121... Receiving page 122... Receiving page 123... Receiving page 124... Receiving page 125... Receiving page 126... Receiving page 127... Receiving page 128... Receiving page 129... Receiving page 130... Receiving page 131... Receiving page 132... Receiving page 133... Receiving page 134... Receiving page 135... Receiving page 136... Receiving page 137... Receiving page 138... Receiving page 139... Receiving page 140... Receiving page 141... Receiving page 142... Receiving page 143... Receiving page 144... Receiving page 145... Receiving page 146... Receiving page 147... Receiving page 148... Receiving page 149... Receiving page 150... Receiving page 151... Receiving page 152... Receiving page 153... Receiving page 154... Receiving page 155... Receiving page 156... Receiving page 157... Receiving page 158... Receiving page 159... Receiving page 160... Receiving page 161... Receiving page 162... Receiving page 163... Receiving page 164... Receiving page 165... Receiving page 166... Receiving page 167... Receiving page 168... Receiving page 169... Receiving page 170... Receiving page 171... Receiving page 172... Receiving page 173... Receiving page 174... Receiving page 175... Receiving page 176... Receiving page 177... Receiving page 178... Receiving page 179... Receiving page 180... Receiving page 181... Receiving page 182... Receiving page 183... Receiving page 184... Receiving page 185... Receiving page 186... Receiving page 187... Receiving page 188... Receiving page 189... Receiving page 190... Receiving page 191... Receiving page 192... Receiving page 193... Receiving page 194... Receiving page 195... Receiving page 196... Receiving page 197... Receiving page 198... Receiving page 199... Receiving page 200... Receiving page 201... Receiving page 202... Receiving page 203... Receiving page 204... Receiving page 205... Receiving page 206... Receiving page 207... Receiving page 208... Receiving page 209... Receiving page 210... Receiving page 211... Receiving page 212... Receiving page 213... Receiving page 214... Receiving page 215... Receiving page 216... Receiving page 217... Receiving page 218... Receiving page 219... Receiving page 220... Receiving page 221... Receiving page 222... Receiving page 223... Receiving page 224... Receiving page 225... Receiving page 226... Receiving page 227... Receiving page 228... Receiving page 229... Receiving page 230... Receiving page 231... Receiving page 232... Receiving page 233... Receiving page 234... Receiving page 235... Receiving page 236... Receiving page 237... Receiving page 238... Receiving page 239... Receiving page 240... Receiving page 241... Receiving page 242... Receiving page 243... Receiving page 244... Receiving page 245... Receiving page 246... #> Simple feature collection with 1000 features and 13 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 8.465915 ymin: 47.32365 xmax: 8.599787 ymax: 47.43141 #> Geodetic CRS:  WGS 84 #> # A tibble: 1,000 × 14 #>    updated_datetime status detail service_name service_notice service_request_id #>    <chr>            <chr>  <chr>  <chr>        <chr>                       <int> #>  1 2024-07-12T21:5… open   \"Um d… Strasse/Tro…  NA                         58516 #>  2 2024-07-12T14:2… open   \"Halt… Grünflächen…  NA                         58512 #>  3 2024-07-12T20:0… closed \"Schi… VBZ/ÖV       \"Grüezi\\r\\n\\r…              58511 #>  4 2024-07-12T21:5… open   \"Wald… Grünflächen…  NA                         58510 #>  5 2024-07-12T15:0… closed \"Sofa… Abfall/Samm… \"Entsorgung +…              58508 #>  6 2024-07-12T14:3… closed \"Mobi… Abfall/Samm… \"Entsorgung +…              58506 #>  7 2024-07-12T17:2… open   \"Extr… Graffiti      NA                         58505 #>  8 2024-07-12T21:4… closed \"Könn… Strasse/Tro… \"Besten Dank …              58503 #>  9 2024-07-12T21:4… open   \"Star… Strasse/Tro…  NA                         58502 #> 10 2024-07-12T12:0… open   \"Schl… Strasse/Tro…  NA                         58496 #> # ℹ 990 more rows #> # ℹ 8 more variables: service_code <chr>, interface_used <chr>, #> #   agency_sent_datetime <chr>, requested_datetime <chr>, title <chr>, #> #   description <chr>, media_url <chr>, geometry <POINT [°]>"},{"path":"https://jslth.github.io/r311/reference/o311_services.html","id":null,"dir":"Reference","previous_headings":"","what":"Get service list — o311_services","title":"Get service list — o311_services","text":"Get list available services. Services unique endpoint / city thus require attached jurisdiction using o311_api.","code":""},{"path":"https://jslth.github.io/r311/reference/o311_services.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get service list — o311_services","text":"","code":"o311_services(...)  o311_service(service_code, ...)"},{"path":"https://jslth.github.io/r311/reference/o311_services.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get service list — o311_services","text":"... endpoint-specific parameters documented respective endpoint reference. service_code Identifier single service definition. Service codes can usually retrieved o311_services.","code":""},{"path":"https://jslth.github.io/r311/reference/o311_services.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get service list — o311_services","text":"dataframe list containing information service.","code":""},{"path":"https://jslth.github.io/r311/reference/o311_services.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get service list — o311_services","text":"","code":"# set up a jurisdiction o311_api(\"san francisco\")  can_connect <- o311_ok() if (can_connect) {   # get a list of all services   services <- o311_services()    # inspect a service code   o311_service(services$service_code[1]) } #> # A tibble: 1 × 2 #>   service_code                        attributes$variable $code        $datatype #>   <chr>                               <lgl>               <chr>        <chr>     #> 1 input:Litter Receptacle Maintenance TRUE                input.Garba… singleva… #> # ℹ 4 more variables: attributes$required <lgl>, $order <int>, #> #   $description <chr>, $values <list>  o311_reset_endpoints()"},{"path":"https://jslth.github.io/r311/reference/validate_endpoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate endpoints — validate_endpoints","title":"Validate endpoints — validate_endpoints","text":"Checks whether endpoints correctly defined, reachable, /valid. Iterates endpoints defined o311_endpoints returns status along reason, applicable.","code":""},{"path":"https://jslth.github.io/r311/reference/validate_endpoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate endpoints — validate_endpoints","text":"","code":"validate_endpoints(   idx = NULL,   checks = c(\"discovery\", \"services\", \"requests\"),   methods = c(\"formal\", \"down\", \"valid\") )"},{"path":"https://jslth.github.io/r311/reference/validate_endpoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate endpoints — validate_endpoints","text":"idx [integer] Index numbers endpoints check. Index numbers follow row numbers o311_endpoints. checks [character] open311 method check. default, checks methods. methods [character] checks apply. formal checks whether endpoint uniquely identifiable given names jurisdictions o311_endpoints. checks whether endpoint reachable ready requests. valid checks whether method returns valid output, .e. list dataframe 0 rows/elements. default, applies methods.","code":""},{"path":"https://jslth.github.io/r311/reference/validate_endpoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate endpoints — validate_endpoints","text":"dataframe containing name endpoint, one three columns check results, one three columns reasons check turned negative.","code":""},{"path":"https://jslth.github.io/r311/reference/validate_endpoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate endpoints — validate_endpoints","text":"","code":"# check the first three endpoints in o311_endpoints() validate_endpoints(1:3) #> Receiving endpoint 1 out of 3... Receiving endpoint 2 out of 3... Receiving endpoint 3 out of 3... #> # A tibble: 3 × 7 #>   name              discovery services requests reason_discovery reason_services #>   <chr>             <lgl>     <lgl>    <lgl>    <chr>            <lgl>           #> 1 Annaberg-Buchhol… TRUE      TRUE     TRUE     NA               NA              #> 2 Bloomington, IN   FALSE     TRUE     TRUE     API not reachab… NA              #> 3 Bonn, DE          FALSE     TRUE     TRUE     API not reachab… NA              #> # ℹ 1 more variable: reason_requests <lgl>  # check only requests validate_endpoints(1:3, checks = \"requests\") #> Receiving endpoint 1 out of 3... Receiving endpoint 2 out of 3... Receiving endpoint 3 out of 3... #> # A tibble: 3 × 3 #>   name                  requests reason_requests #>   <chr>                 <lgl>    <lgl>           #> 1 Annaberg-Buchholz, DE TRUE     NA              #> 2 Bloomington, IN       TRUE     NA              #> 3 Bonn, DE              TRUE     NA               # check only whether an endpoint is down validate_endpoints(1:3, methods = \"down\") #> Receiving endpoint 1 out of 3... Receiving endpoint 2 out of 3... Receiving endpoint 3 out of 3... #> # A tibble: 3 × 7 #>   name              discovery services requests reason_discovery reason_services #>   <chr>             <lgl>     <lgl>    <lgl>    <lgl>            <lgl>           #> 1 Annaberg-Buchhol… TRUE      TRUE     TRUE     NA               NA              #> 2 Bloomington, IN   TRUE      TRUE     TRUE     NA               NA              #> 3 Bonn, DE          TRUE      TRUE     TRUE     NA               NA              #> # ℹ 1 more variable: reason_requests <lgl>"},{"path":"https://jslth.github.io/r311/news/index.html","id":"r311-031","dir":"Changelog","previous_headings":"","what":"r311 0.3.1","title":"r311 0.3.1","text":"Initial CRAN submission.","code":""}]
