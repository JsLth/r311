[{"path":"https://ropengov.github.io/r311/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 r311 authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ropengov.github.io/r311/articles/r311.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"r311: An R interface to the open311 standard","text":"open311 international open-access standard civic issue management public service communication. standard allows administrations better manage citizen requests, citizens easily participate administrative work, researchers data scientists access data regarding public service communication. open standard, open311 centralized API, framework implemented various cities (e.g. San Francisco, CA, Chicago, IL, Cologne, DE, Turku, FI, Zurich, CH) services (e.g. SeeClickFix, FixMyStreet). way past golden age open311 APIs much development civic issue tracking shifted less open-access less standardized alternatives. Many former prime examples abandoned severely limited open311 endpoints. Nonetheless, open311 still constitutes valuable source open government data. Many cities services still maintain open311 service. r311 allows seamless management selection endpoints retrieval service request data. supports (depend ) many popular R frameworks tidyverse, sf xml2 response formatting. r311 designed slim, content dependencies. imports two import-less packages used HTTP response handling. functionality limited two main features: Endpoint management Sending requests vignette briefly cover two features.","code":""},{"path":"https://ropengov.github.io/r311/articles/r311.html","id":"endpoints","dir":"Articles","previous_headings":"","what":"Endpoints","title":"r311: An R interface to the open311 standard","text":"Since open311 open decentralized standard, one many endpoints one can access. endpoint commonly implemented city administration, can also managed service provider FixMyStreet. endpoint can define multiple jurisdiction IDs, although, practice, endpoints define single jurisdiction. can thus difficult manage multitude endpoints jurisdictions. Efforts made list open311 servers, incomplete outdated. r311 offers updated modifiable endpoint list defines number open311 implementations defined use package. list can read using o311_endpoints. list neither claim comprehensiveness --dateness. arguably provides important easily accessible endpoints 2024. However, r311 also offers ability add new endpoints o311_endpoints using o311_add_endpoint. need provide name (lookup) root URL (URL used send requests). following code adds open311 test server Rostock, Germany. Retrieving endpoints list confirms successfully added new row endpoints dataframe. can now select Rostock test API session using o311_api. function matches API using endpoint name jurisdiction ID attaches active session. Query functions automatically detect attached API. attaching API, o311_ok confirms selected endpoint able handle request queries. result TRUE, can safely start receiving real request data.","code":"o311_endpoints() #> # A tibble: 67 × 10 #>    name            root  docs  jurisdiction key   pagination limit json  dialect #>    <chr>           <chr> <chr> <chr>        <lgl> <lgl>      <int> <lgl> <chr>   #>  1 Annaberg-Buchh… http… http… annberg-buc… FALSE TRUE          50 TRUE  Mark-a… #>  2 Bloomington, IN http… NA    bloomington… FALSE TRUE        1000 TRUE  uReport #>  3 Bonn, DE        http… http… bonn.de      FALSE TRUE         100 TRUE  Mark-a… #>  4 Boston, MA      http… http… NA           FALSE TRUE          50 TRUE  Connec… #>  5 Brookline, MA   http… http… brooklinema… FALSE TRUE          50 TRUE  Connec… #>  6 Austin, TX      http… http… NA           FALSE TRUE          50 TRUE  Connec… #>  7 Chicago, IL     http… http… cityofchica… FALSE TRUE          50 TRUE  Connec… #>  8 Newport News, … http… http… cityofnewpo… FALSE TRUE          50 TRUE  Connec… #>  9 San Diego, CA   http… http… sandiego.gov FALSE TRUE          50 TRUE  Connec… #> 10 Köln / Cologne… http… NA    stadt-koeln… FALSE TRUE          50 TRUE  Mark-a… #> # ℹ 57 more rows #> # ℹ 1 more variable: questioning <lgl> o311_add_endpoint(   name = \"Rostock Test\",   root = \"https://demo.klarschiff-hro.de/backoffice/citysdk/\",   jurisdiction = \"rostock.de\" ) nrow(o311_endpoints()) #> [1] 68 o311_api(\"Rostock Test\") o311_ok() #> [1] TRUE"},{"path":"https://ropengov.github.io/r311/articles/r311.html","id":"making-requests","dir":"Articles","previous_headings":"","what":"Making requests","title":"r311: An R interface to the open311 standard","text":"selecting API attaching session, functions can access . can now make requests.","code":""},{"path":"https://ropengov.github.io/r311/articles/r311.html","id":"services","dir":"Articles","previous_headings":"Making requests","what":"Services","title":"r311: An R interface to the open311 standard","text":"get overview available services jurisdiction, can use o311_services, returns list Rostock’s administrative services.","code":"o311_services() #> # A tibble: 161 × 8 #>    service_code service_name  description metadata type  keywords group group_id #>    <chr>        <chr>         <lgl>       <lgl>    <chr> <chr>    <chr>    <int> #>  1 86           Ampel behind… NA          FALSE    real… idea     Barr…      115 #>  2 87           Ampelschaltu… NA          FALSE    real… idea     Barr…      115 #>  3 88           Bordstein ab… NA          FALSE    real… idea     Barr…      115 #>  4 89           Zugang rolls… NA          FALSE    real… idea     Barr…      115 #>  5 90           Ampelschaltu… NA          FALSE    real… idea     Fahr…      120 #>  6 91           Beleuchtung … NA          FALSE    real… idea     Fahr…      120 #>  7 92           Beschilderun… NA          FALSE    real… idea     Fahr…      120 #>  8 93           Beschilderun… NA          FALSE    real… idea     Fahr…      120 #>  9 94           Bordstein ab… NA          FALSE    real… idea     Fahr…      120 #> 10 95           Fahrradständ… NA          FALSE    real… idea     Fahr…      120 #> # ℹ 151 more rows"},{"path":"https://ropengov.github.io/r311/articles/r311.html","id":"requests","dir":"Articles","previous_headings":"Making requests","what":"Requests","title":"r311: An R interface to the open311 standard","text":"get data civic issues city area, run o311_requests. Using output o311_services, can narrow output requests. Open311 defines set standard parameters implemented endpoints. Using service_code parameter one previously returned service codes, complaints businesses illegally using shared spaces returned. Similarly, using service_request_id output, can retrieve single service request API.","code":"o311_requests() #> Simple feature collection with 7 features and 15 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 12.07615 ymin: 54.06731 xmax: 12.23699 ymax: 54.2091 #> Geodetic CRS:  WGS 84 #> # A tibble: 7 × 16 #>   service_request_id status_notes status   service_code service_name description #>                <int> <chr>        <chr>           <int> <chr>        <chr>       #> 1                  7 NA           received           11 Wegereinigu… redaktione… #> 2                  3 \"\"           in_proc…           16 Grünschnitt… Dieser Wei… #> 3                  2 \"\"           in_proc…           60 Sitzgelegen… Dieser Sit… #> 4                  5 \"\"           closed             62 Ampel schad… Die Ampel … #> 5                  6 \"\"           reviewed          110 Spielplatz … Hier sollt… #> 6                  4 \"\"           closed            129 Papierkorb/… Dieser Abf… #> 7                  1 \"\"           in_proc…          160 Altfahrzeug… Das Schrot… #> # ℹ 10 more variables: agency_responsible <chr>, service_notice <lgl>, #> #   requested_datetime <chr>, updated_datetime <chr>, expected_datetime <lgl>, #> #   address <chr>, adress_id <lgl>, media_url <chr>, zipcode <lgl>, #> #   geometry <POINT [°]> o311_requests(service_code = \"16\") #> Simple feature collection with 1 feature and 15 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 12.17547 ymin: 54.10655 xmax: 12.17547 ymax: 54.10655 #> Geodetic CRS:  WGS 84 #> # A tibble: 1 × 16 #>   service_request_id status_notes status   service_code service_name description #>                <int> <chr>        <chr>           <int> <chr>        <chr>       #> 1                  3 \"\"           in_proc…           16 Grünschnitt… Dieser Wei… #> # ℹ 10 more variables: agency_responsible <chr>, service_notice <lgl>, #> #   requested_datetime <chr>, updated_datetime <chr>, expected_datetime <lgl>, #> #   address <chr>, adress_id <lgl>, media_url <chr>, zipcode <lgl>, #> #   geometry <POINT [°]> o311_request(\"4\") #> Simple feature collection with 1 feature and 15 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 12.12266 ymin: 54.06731 xmax: 12.12266 ymax: 54.06731 #> Geodetic CRS:  WGS 84 #> # A tibble: 1 × 16 #>   service_request_id status_notes status service_code service_name   description #>                <int> <chr>        <chr>         <int> <chr>          <chr>       #> 1                  4 \"\"           closed          129 Papierkorb/Ab… Dieser Abf… #> # ℹ 10 more variables: agency_responsible <chr>, service_notice <lgl>, #> #   requested_datetime <chr>, updated_datetime <chr>, expected_datetime <lgl>, #> #   address <chr>, adress_id <lgl>, media_url <chr>, zipcode <lgl>, #> #   geometry <POINT [°]>"},{"path":"https://ropengov.github.io/r311/articles/r311.html","id":"bulk-queries","dir":"Articles","previous_headings":"Making requests","what":"Bulk queries","title":"r311: An R interface to the open311 standard","text":"Many endpoints define page limit meaning responses divided pages. query without parameters returns first page. Pagination can controlled page argument. control pagination, o311_request_all function can come handy. automatically iterates pages heuristically decides stop. following example retrieves data first two pages, resulting tibble 100 service requests.","code":"o311_api(\"Rostock, DE\") o311_request_all(max_pages = 2) #> Simple feature collection with 4847 features and 15 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 12.01733 ymin: 54.05571 xmax: 12.22792 ymax: 54.24393 #> Geodetic CRS:  WGS 84 #> # A tibble: 4,847 × 16 #>    service_request_id status_notes  status service_code service_name description #>                 <int> <chr>         <chr>         <int> <chr>        <chr>       #>  1              24824 \"\"            in_pr…          113 Beschilderu… Kreuzung A… #>  2              95322 \"Danke für I… in_pr…            2 bauliche Ge… Gefährlich… #>  3              70677  NA           recei…            2 bauliche Ge… redaktione… #>  4              72069  NA           recei…           22 Sperrmüll    redaktione… #>  5              72070  NA           recei…           15 Elektroschr… redaktione… #>  6             102044 \"\"            in_pr…           15 Elektroschr… 1 TK        #>  7              70076  NA           closed          160 Altfahrzeug… NA          #>  8              75356  NA           recei…           17 Hausmüll     redaktione… #>  9              43518 \"Der Erdhauf… closed           13 Bauabfall    Illegale E… #> 10              44333  NA           recei…            2 bauliche Ge… redaktione… #> # ℹ 4,837 more rows #> # ℹ 10 more variables: agency_responsible <chr>, service_notice <lgl>, #> #   requested_datetime <chr>, updated_datetime <chr>, expected_datetime <chr>, #> #   address <chr>, adress_id <lgl>, media_url <chr>, zipcode <lgl>, #> #   geometry <POINT [°]>"},{"path":"https://ropengov.github.io/r311/articles/r311.html","id":"non-standard-parameters","dir":"Articles","previous_headings":"Making requests","what":"Non-standard parameters","title":"r311: An R interface to the open311 standard","text":"r311 implicitly supports API extensions introducing custom paths parameters. One API Klarschiff Rostock based CitySDK. Klarschiff CitySDK defines number non-default paths parameters extend filtering abilities open311 requests. Available parameters can usually found respective documentation (e.g. GitHub Klarschiff CitySDK). following query returns last 50 requests tagged “idea” keyword. custom parameters can also alter shape output. following example, query just count total requests using just_count parameter. result 1×1 tibble containing count value. CitySDK extensions also offers additional URL paths can queried using generic o311_query function.","code":"tickets <- o311_requests(keyword = \"idea\", max_requests = 50) o311_requests(just_count = TRUE) #> # A tibble: 1 × 1 #>   value #>   <int> #> 1  4847 poly <- o311_query(\"areas\") plot(poly$grenze) plot(tickets$geometry, add = TRUE, pch = 16)"},{"path":"https://ropengov.github.io/r311/articles/r311.html","id":"cleanup","dir":"Articles","previous_headings":"","what":"Cleanup","title":"r311: An R interface to the open311 standard","text":"Endpoint data stored persistently sessions can create database open311 endpoints. database stored system’s user directory returned tools::R_user_dir(\"r311\"). reset database, run default back endpoints defined r311 remove endpoints manually added o311_add_endpoints.","code":"o311_reset_endpoints()"},{"path":"https://ropengov.github.io/r311/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jonas Lieth. Author, maintainer, copyright holder.","code":""},{"path":"https://ropengov.github.io/r311/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lieth J (2024). r311: Interface 'open311' Standard. R package version 0.4.0, https://jslth.github.io/r311/, https://github.com/JsLth/r311, https://ropengov.github.io/r311/, https://github.com/rOpenGov/r311, https://github.com/jslth/r311.","code":"@Manual{,   title = {r311: Interface to the 'open311' Standard},   author = {Jonas Lieth},   year = {2024},   note = {R package version 0.4.0, https://jslth.github.io/r311/,     https://github.com/JsLth/r311, https://ropengov.github.io/r311/,     https://github.com/rOpenGov/r311},   url = {https://github.com/jslth/r311}, }"},{"path":"https://ropengov.github.io/r311/index.html","id":"r311-","dir":"","previous_headings":"","what":"Interface to the open311 Standard","title":"Interface to the open311 Standard","text":"r311 R interface international standard open311. Open311 APIs used civic issue management public service communication. standard allows administrations better manage citizen requests, citizens easily submit requests, (hence package) researchers data scientists access data regarding public service communication. r311 supports seamless management supplementation available endpoints, selection appropriate APIs access, retrieval civic service request data. Custom queries extensions (e.g. CitySDK) implicitly supported. r311 designed require minimal amount dependencies, allow easy integration common R frameworks tidyverse, sf xml2.","code":""},{"path":"https://ropengov.github.io/r311/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Interface to the open311 Standard","text":"can install r311 CRAN : can install development version GitHub :","code":"install.packages(\"r311\") # install.packages(\"remotes\") remotes::install_github(\"rOpenGov/r311\")"},{"path":"https://ropengov.github.io/r311/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Interface to the open311 Standard","text":"following example loads r311, sets jurisdiction retrieves small amount data service tickets Cologne, Germany.","code":"library(r311)  o311_api(\"Cologne\") o311_requests() #> Simple feature collection with 100 features and 11 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 6.822994 ymin: 50.85606 xmax: 7.100928 ymax: 51.06279 #> Geodetic CRS:  WGS 84 #> # A tibble: 100 × 12 #>    service_request_id title              description address_string service_name #>    <chr>              <chr>              <chr>       <chr>          <chr>        #>  1 20481-2024         #20481-2024 Schro… \"31.08.202… 51065 Köln - … Schrottfahr… #>  2 20482-2024         #20482-2024 Wilde… \"Vor Haus … 51105 Köln - … Wilder Müll  #>  3 20483-2024         #20483-2024 Defek… \"gefährlic… 50677 Köln - … Defekte Obe… #>  4 20484-2024         #20484-2024 Straß… \"auffahrra… 50674 Köln - … Straßenbaus… #>  5 20485-2024         #20485-2024 Wilde…  <NA>       50765 Köln - … Wilder Müll  #>  6 20486-2024         #20486-2024 Kölne… \"Grünfläch… 50765 Köln - … Kölner Grün  #>  7 20487-2024         #20487-2024 Defek…  <NA>       51147 Köln - … Defekte Obe… #>  8 20488-2024         #20488-2024 Schro… \"Hallo, an… 50825 Köln - … Schrottfahr… #>  9 20489-2024         #20489-2024 Wilde… \"Evastr Ec… 51149 Köln - … Wilder Müll  #> 10 20490-2024         #20490-2024 Wilde… \"Wilder Mü… 50827 Köln - … Wilder Müll  #> # ℹ 90 more rows #> # ℹ 7 more variables: requested_datetime <chr>, updated_datetime <chr>, #> #   status <chr>, media_url <chr>, status_note <chr>, service_code <chr>, #> #   geometry <POINT [°]>"},{"path":"https://ropengov.github.io/r311/index.html","id":"api-upkeep","dir":"","previous_headings":"","what":"API upkeep","title":"Interface to the open311 Standard","text":"r311 powered JSON available APIs (see ). list claim comprehensive --date times updated time time. API found unavailable extended period time, marked “questioning”. Questionable APIs removed next release. know stable open311 API added list, please consider opening issue. Otherwise, can also just use o311_add_endpoint() function add API locally.","code":""},{"path":"https://ropengov.github.io/r311/reference/o311_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Select an open311 API — o311_api","title":"Select an open311 API — o311_api","text":"Select open311 API attach active session. open311 API implementation open311 standard. consists endpoint name (e.g. city), root URL, jurisdiction ID. unambiguously identify API, can provide endpoint, jurisdiction ID, . input matched o311_endpoints select API. selected API available o311_* functions session terminated overwritten.","code":""},{"path":"https://ropengov.github.io/r311/reference/o311_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select an open311 API — o311_api","text":"","code":"o311_api(   endpoint = NULL,   jurisdiction = NULL,   key = NULL,   format = c(\"json\", \"xml\") )"},{"path":"https://ropengov.github.io/r311/reference/o311_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select an open311 API — o311_api","text":"endpoint [character] Name endpoint runs open311 API. usually city, can provider open311 API. jurisdiction [character] ID jurisdiction served open311 API. jurisdiction ID usually root URL jurisdiction website, e.g. \"sandiego.gov\" San Diego. key [character] key required selected API, argument can used store key R session. API key automatically used API requests. key NULL although key required, warning emitted. format [character] Response format. Must one \"json\" \"xml\". Defaults \"json\" simplification difficult unsafe xml2 objects. advisable use \"json\" whenever possible applicable. Additionally, \"xml\" requires xml2 package queries xmlconvert package simplification.","code":""},{"path":"https://ropengov.github.io/r311/reference/o311_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select an open311 API — o311_api","text":"list containing important information given jurisdiction, invisibly. list attached session can retrieved calling o311_api() without arguments. Passing arguments returns currently attached API object.","code":""},{"path":"https://ropengov.github.io/r311/reference/o311_api.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Select an open311 API — o311_api","text":"theory, several jurisdictions can exist single endpoints, e.g. region serves multiple jurisdictions. Similarly, multiple endpoints can exist single jurisdiction, e.g. provider set production test endpoints jurisdictions. Providing endpoint jurisdiction thus safe way identify API. default, handful endpoints supported. list currently supported endpoints, run o311_endpoints. can add non-default endpoints using o311_add_endpoint.","code":""},{"path":[]},{"path":"https://ropengov.github.io/r311/reference/o311_api.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select an open311 API — o311_api","text":"","code":"# cities are matched using regex o311_api(\"Cologne\")  # passing a jurisdiction is more explicit o311_api(jurisdiction = \"stadt-koeln.de\")  # calls without arguments return the current API o311_api() #> <r311_api> #>  name         : Köln / Cologne, DE #>  root         : https://sags-uns.stadt-koeln.de/georeport/v2/ #>  docs         : None #>  jurisdiction : stadt-koeln.de #>  key          : FALSE #>  pagination   : TRUE #>  limit        : 50 #>  json         : TRUE #>  dialect      : Mark-a-Spot #>  questioning  : None"},{"path":"https://ropengov.github.io/r311/reference/o311_discovery.html","id":null,"dir":"Reference","previous_headings":"","what":"API discovery — o311_discovery","title":"API discovery — o311_discovery","text":"Retrieve discovery information mounted endpoint.","code":""},{"path":"https://ropengov.github.io/r311/reference/o311_discovery.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"API discovery — o311_discovery","text":"","code":"o311_discovery()"},{"path":"https://ropengov.github.io/r311/reference/o311_discovery.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"API discovery — o311_discovery","text":"list containing details given open311 API.","code":""},{"path":"https://ropengov.github.io/r311/reference/o311_discovery.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"API discovery — o311_discovery","text":"","code":"o311_api(\"zurich\") # \\donttest{ if (o311_ok()) {   o311_discovery() } #> $discovery #> $discovery$endpoints #> $discovery$endpoints[[1]] #> $discovery$endpoints[[1]]$url #> [1] \"https://www.zueriwieneu.ch/open311\" #>  #> $discovery$endpoints[[1]]$formats #> $discovery$endpoints[[1]]$formats[[1]] #> [1] \"text/xml\" #>  #> $discovery$endpoints[[1]]$formats[[2]] #> [1] \"application/json\" #>  #> $discovery$endpoints[[1]]$formats[[3]] #> [1] \"text/html\" #>  #>  #> $discovery$endpoints[[1]]$specification #> [1] \"http://wiki.open311.org/GeoReport_v2\" #>  #> $discovery$endpoints[[1]]$type #> [1] \"production\" #>  #> $discovery$endpoints[[1]]$changeset #> [1] \"2021-03-01T00:00:00Z\" #>  #>  #>  #> $discovery$max_requests #> [1] \"1000\" #>  #> $discovery$changeset #> [1] \"2021-03-01T00:00:00Z\" #>  #> $discovery$contact #> [1] \"Send email to zurich@fixmystreet.com.\" #>  #>  # }"},{"path":"https://ropengov.github.io/r311/reference/o311_endpoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Endpoints — o311_add_endpoint","title":"Endpoints — o311_add_endpoint","text":"Modify examine defined open311 endpoints. o311_endpoints() retrieves list endpoints including additional information. o311_add_endpoint adds list define new endpoint can used queries. o311_reset_endpoints restores initial state endpoints list.","code":""},{"path":"https://ropengov.github.io/r311/reference/o311_endpoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Endpoints — o311_add_endpoint","text":"","code":"o311_add_endpoint(   name,   root,   jurisdiction = NULL,   key = FALSE,   pagination = FALSE,   limit = NULL,   json = TRUE,   dialect = NULL )  o311_reset_endpoints()  o311_endpoints(...)"},{"path":"https://ropengov.github.io/r311/reference/o311_endpoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Endpoints — o311_add_endpoint","text":"name [character] Name endpoint / city. name can arbitrary serves identification [o311_api]. root [character] Base URL endpoint sending production-grade requests. root URL commonly points \"georeport/v2/\". jurisdiction [character] Unique identifier jurisdiction. jurisdiction typically defined domain respective city website. optional endpoints serve one jurisdiction. key [logical] API key mandatory? pagination [logical] requests responses paginated? limit [integer] paginated, many requests one page contain? json [logical] JSON responses supported? FALSE, defaults \"XML\" responses. See also o311_api. dialect [character] open311 extension endpoint built . Common dialects include CitySDK, Connected Bits, SeeClickFix Mark--Spot. Currently, argument nothing, used future adjust response handling based dialect. ... List key-value pairs pair filter. key represents column value requested column value. keys must present column names o311_endpoints().","code":""},{"path":"https://ropengov.github.io/r311/reference/o311_endpoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Endpoints — o311_add_endpoint","text":"o311_endpoints, dataframe containing relevant information endpoint. o311_add_endpoint, new endpoint, invisibly. o311_reset_endpoints returns NULL invisibly. new endpoint duplicate, NULL returned invisibly.","code":""},{"path":"https://ropengov.github.io/r311/reference/o311_endpoints.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Endpoints — o311_add_endpoint","text":"o311_endpoints() returns static list defined package installation directory. list contains limited number endpoints proven work time package development. include newer/smaller/less known endpoints test APIs. can manually added using o311_add_endpoint.","code":""},{"path":"https://ropengov.github.io/r311/reference/o311_endpoints.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Endpoints — o311_add_endpoint","text":"function uses R_user_dir persistently store custom endpoints data sessions. set different directory, may use options(\"o311_user_dir\"). clean , run o311_reset_endpoints() deletes package-specific user directory defaults back system.file(\"endpoints.json\", package = \"r311\").","code":""},{"path":[]},{"path":"https://ropengov.github.io/r311/reference/o311_endpoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Endpoints — o311_add_endpoint","text":"","code":"# read default endpoints o311_endpoints() #> # A tibble: 67 × 10 #>    name            root  docs  jurisdiction key   pagination limit json  dialect #>    <chr>           <chr> <chr> <chr>        <lgl> <lgl>      <int> <lgl> <chr>   #>  1 Annaberg-Buchh… http… http… annberg-buc… FALSE TRUE          50 TRUE  Mark-a… #>  2 Bloomington, IN http… NA    bloomington… FALSE TRUE        1000 TRUE  uReport #>  3 Bonn, DE        http… http… bonn.de      FALSE TRUE         100 TRUE  Mark-a… #>  4 Boston, MA      http… http… NA           FALSE TRUE          50 TRUE  Connec… #>  5 Brookline, MA   http… http… brooklinema… FALSE TRUE          50 TRUE  Connec… #>  6 Austin, TX      http… http… NA           FALSE TRUE          50 TRUE  Connec… #>  7 Chicago, IL     http… http… cityofchica… FALSE TRUE          50 TRUE  Connec… #>  8 Newport News, … http… http… cityofnewpo… FALSE TRUE          50 TRUE  Connec… #>  9 San Diego, CA   http… http… sandiego.gov FALSE TRUE          50 TRUE  Connec… #> 10 Köln / Cologne… http… NA    stadt-koeln… FALSE TRUE          50 TRUE  Mark-a… #> # ℹ 57 more rows #> # ℹ 1 more variable: questioning <lgl>  # get all endpoints powered by Connected Bits o311_endpoints(dialect = \"Connected Bits\") #> # A tibble: 7 × 10 #>   name             root  docs  jurisdiction key   pagination limit json  dialect #>   <chr>            <chr> <chr> <chr>        <lgl> <lgl>      <int> <lgl> <chr>   #> 1 Boston, MA       http… http… NA           FALSE TRUE          50 TRUE  Connec… #> 2 Brookline, MA    http… http… brooklinema… FALSE TRUE          50 TRUE  Connec… #> 3 Austin, TX       http… http… NA           FALSE TRUE          50 TRUE  Connec… #> 4 Chicago, IL      http… http… cityofchica… FALSE TRUE          50 TRUE  Connec… #> 5 Newport News, VA http… http… cityofnewpo… FALSE TRUE          50 TRUE  Connec… #> 6 San Diego, CA    http… http… sandiego.gov FALSE TRUE          50 TRUE  Connec… #> 7 San Francisco, … http… http… NA           FALSE TRUE          50 TRUE  Connec… #> # ℹ 1 more variable: questioning <lgl>  # add a new endpoint o311_add_endpoint(name = \"test\", root = \"test.org/georeport/v2\")  # read new endpoints o311_endpoints() #> # A tibble: 68 × 10 #>    name            root  docs  jurisdiction key   pagination limit json  dialect #>    <chr>           <chr> <chr> <chr>        <lgl> <lgl>      <int> <lgl> <chr>   #>  1 Annaberg-Buchh… http… http… annberg-buc… FALSE TRUE          50 TRUE  Mark-a… #>  2 Bloomington, IN http… NA    bloomington… FALSE TRUE        1000 TRUE  uReport #>  3 Bonn, DE        http… http… bonn.de      FALSE TRUE         100 TRUE  Mark-a… #>  4 Boston, MA      http… http… NA           FALSE TRUE          50 TRUE  Connec… #>  5 Brookline, MA   http… http… brooklinema… FALSE TRUE          50 TRUE  Connec… #>  6 Austin, TX      http… http… NA           FALSE TRUE          50 TRUE  Connec… #>  7 Chicago, IL     http… http… cityofchica… FALSE TRUE          50 TRUE  Connec… #>  8 Newport News, … http… http… cityofnewpo… FALSE TRUE          50 TRUE  Connec… #>  9 San Diego, CA   http… http… sandiego.gov FALSE TRUE          50 TRUE  Connec… #> 10 Köln / Cologne… http… NA    stadt-koeln… FALSE TRUE          50 TRUE  Mark-a… #> # ℹ 58 more rows #> # ℹ 1 more variable: questioning <lgl>  # reset endpoints back to default o311_reset_endpoints()"},{"path":"https://ropengov.github.io/r311/reference/o311_ok.html","id":null,"dir":"Reference","previous_headings":"","what":"Is open311 API ok? — o311_ok","title":"Is open311 API ok? — o311_ok","text":"Checks whether open311 API mounted o311_api reachable returns valid requests response.","code":""},{"path":"https://ropengov.github.io/r311/reference/o311_ok.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is open311 API ok? — o311_ok","text":"","code":"o311_ok(error = FALSE)"},{"path":"https://ropengov.github.io/r311/reference/o311_ok.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is open311 API ok? — o311_ok","text":"error [logical] Whether return logical error message describing API ok.","code":""},{"path":"https://ropengov.github.io/r311/reference/o311_ok.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is open311 API ok? — o311_ok","text":"logical describing whether API reachable . error = TRUE, returns corresponding error object one occurs.","code":""},{"path":"https://ropengov.github.io/r311/reference/o311_ok.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is open311 API ok? — o311_ok","text":"","code":"# \\donttest{ # check if Bonn API is reachable o311_api(\"Bonn\") o311_ok() #> [1] TRUE  # check if Helsinki API is reachable - fails o311_add_endpoint(   name = \"Helsinki\",   root = \"asiointi.hel.fi/palautews/rest/v1/\" )  o311_api(\"Helsinki\") o311_ok() #> [1] FALSE  # return error message try(o311_ok(error = TRUE)) #> <o311_type_error in check_content_type(resp, type): Unexpected content type “text/html; charset=UTF-8”>  # reset endpoints database o311_reset_endpoints() # }"},{"path":"https://ropengov.github.io/r311/reference/o311_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Query an open311 endpoint — o311_query","title":"Query an open311 endpoint — o311_query","text":"Low-level function perform generic request API currently attached o311_api. open311 implementations support unique operations included official documentation. function can used access URL paths.","code":""},{"path":"https://ropengov.github.io/r311/reference/o311_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query an open311 endpoint — o311_query","text":"","code":"o311_query(path, ..., simplify = TRUE)"},{"path":"https://ropengov.github.io/r311/reference/o311_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query an open311 endpoint — o311_query","text":"path Path appendix used access endpoint-specific operations. ... Additional query parameters. simplify Whether simplify output using jsonlite::toJSON(..., simplify = TRUE).","code":""},{"path":"https://ropengov.github.io/r311/reference/o311_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query an open311 endpoint — o311_query","text":"parsed query output, either list dataframe.","code":""},{"path":"https://ropengov.github.io/r311/reference/o311_query.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Query an open311 endpoint — o311_query","text":"can set options(r311_echo = TRUE) display requests sent using o311_query.","code":""},{"path":"https://ropengov.github.io/r311/reference/o311_query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query an open311 endpoint — o311_query","text":"","code":"o311_api(\"rostock\") # \\donttest{ # manually query discovery o311_query(path = \"discovery\", simplify = FALSE) #> $changeset #> [1] \"2015-11-05 08:43\" #>  #> $contact #> [1] \"Hanse- und Universitätsstadt Rostock, Kataster-, Vermessungs- und Liegenschaftsamt, Holbeinplatz 14, 18069 Rostock, klarschiff.hro@rostock.de\" #>  #> $key_service #> [1] \"klarschiff.hro@rostock.de\" #>  #> $endpoints #> $endpoints[[1]] #> $endpoints[[1]]$specification #> [1] \"http://wiki.open311.org/GeoReport_v2\" #>  #> $endpoints[[1]]$url #> [1] \"https://www.klarschiff-hro.de/backoffice/citysdk\" #>  #> $endpoints[[1]]$changeset #> [1] \"2015-11-05 08:43\" #>  #> $endpoints[[1]]$type #> [1] \"production\" #>  #> $endpoints[[1]]$formats #> $endpoints[[1]]$formats[[1]] #> [1] \"application/json\" #>  #> $endpoints[[1]]$formats[[2]] #> [1] \"text/xml\" #>  #>  #>  #> $endpoints[[2]] #> $endpoints[[2]]$specification #> [1] \"http://wiki.open311.org/GeoReport_v2\" #>  #> $endpoints[[2]]$url #> [1] \"https://support.klarschiff-hro.de/backoffice/citysdk\" #>  #> $endpoints[[2]]$changeset #> [1] \"2015-11-05 08:43\" #>  #> $endpoints[[2]]$type #> [1] \"test\" #>  #> $endpoints[[2]]$formats #> $endpoints[[2]]$formats[[1]] #> [1] \"application/json\" #>  #> $endpoints[[2]]$formats[[2]] #> [1] \"text/xml\" #>  #>  #>  #> $endpoints[[3]] #> $endpoints[[3]]$specification #> [1] \"http://wiki.open311.org/GeoReport_v2\" #>  #> $endpoints[[3]]$url #> [1] \"https://demo.klarschiff-hro.de/backoffice/citysdk\" #>  #> $endpoints[[3]]$changeset #> [1] \"2015-11-05 08:43\" #>  #> $endpoints[[3]]$type #> [1] \"test\" #>  #> $endpoints[[3]]$formats #> $endpoints[[3]]$formats[[1]] #> [1] \"application/json\" #>  #> $endpoints[[3]]$formats[[2]] #> [1] \"text/xml\" #>  #>  #>  #>   # query a custom path defined by the Klarschiff API o311_query(path = \"areas\") #> Simple feature collection with 1 feature and 2 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 11.99837 ymin: 54.0508 xmax: 12.2954 ymax: 54.24451 #> CRS:           NA #> # A tibble: 1 × 3 #>      id name                                                              grenze #>   <int> <chr>                                                     <MULTIPOLYGON> #> 1     1 Klarschiff.HRO (((11.99844 54.17483, 11.99852 54.17496, 11.9988 54.1750… # }"},{"path":"https://ropengov.github.io/r311/reference/o311_requests.html","id":null,"dir":"Reference","previous_headings":"","what":"Get civic service request data — o311_requests","title":"Get civic service request data — o311_requests","text":"Get civic service request data registered open311 endpoint. o311_request queries single service request ID. o311_requests queries single page service requests. o311_request_all tries iterate pages endpoint return complete dataset service requests.","code":""},{"path":"https://ropengov.github.io/r311/reference/o311_requests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get civic service request data — o311_requests","text":"","code":"o311_requests(   service_code = NULL,   start_date = NULL,   end_date = NULL,   status = NULL,   page = NULL,   ... )  o311_request(service_request_id, ...)  o311_request_all(   service_code = NULL,   start_date = NULL,   end_date = NULL,   status = NULL,   ...,   max_pages = Inf,   progress = TRUE )"},{"path":"https://ropengov.github.io/r311/reference/o311_requests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get civic service request data — o311_requests","text":"service_code [character] IDs service types queried. Defaults available codes endpoint. list available service codes can retrieved using o311_services. start_date, end_date [POSIXt] Start date end date query results. Must date-time objects. specified, defaults last 90 days. status [character] Status public service ticket. Can one \"open\" \"closed\". NULL, returns types tickets. page [integer] Page response. endpoints paginate responses way limited number tickets returned query. retrieve data, consider using o311_request_all. ... endpoint-specific parameters documented respective endpoint reference. service_request_id [character] Identifier single service request. Request IDs can usually retrieved o311_requests. max_pages [integer] Number pages search result returned. progress [logical] Whether show waiter indicating current page iteration.","code":""},{"path":"https://ropengov.github.io/r311/reference/o311_requests.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get civic service request data — o311_requests","text":"dataframe containing data civic service requests. dataframe can contain varying columns depending open311 implementation.","code":""},{"path":"https://ropengov.github.io/r311/reference/o311_requests.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get civic service request data — o311_requests","text":"o311_request_all applies number checks determine stop searching. First, many endpoints return error last page exceeded. Thus, last page request failed, break. Second, exceeding pagination limit return error, response compared previous response. identical, response discarded previous responses returned. Finally, page exceeds max_pages, responses point returned. open311 leaves space endpoints implement request parameters. parameters can provided using dot arguments. arguments validated pre-processed. Date-time objects must formatted according w3c standard. common parameters include: q: Perform text search across requests. update_after/updated_before: Limit request according  request update dates. per_page: Specifiy maximum number requests per page. extensions: Adds nested attribute  \"extended_attributes\" response. long/lat/radius: Searches requests fixed radius  around coordinate. dot arguments deviate open311 standard, guaranteed available every endpoint might removed without notice. Refer endpoint docs learn custom parameters (o311_endpoints()$docs).","code":""},{"path":[]},{"path":"https://ropengov.github.io/r311/reference/o311_requests.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get civic service request data — o311_requests","text":"","code":"o311_api(\"zurich\") # \\donttest{ if (o311_ok()) {   # retrieve requests from the last two days   now <- Sys.time()   two_days <- 60 * 60 * 24 * 2   o311_requests(end_date = now, start_date = now - two_days)    # retrieve only open tickets   tickets <- o311_requests(status = \"open\")    # request the first ticket of the previous response   rid <- as.character(tickets$service_request_id[1])   o311_request(rid)    if (interactive()) {     # request all data     o311_request_all()   }    # request data of the first 5 pages   o311_request_all(max_pages = 5) } #> Simple feature collection with 1000 features and 13 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 8.471601 ymin: 47.32494 xmax: 8.598776 ymax: 47.43136 #> Geodetic CRS:  WGS 84 #> # A tibble: 1,000 × 14 #>    service_code              updated_datetime     description requested_datetime #>    <chr>                     <chr>                <chr>       <chr>              #>  1 Brunnen/Hydranten         2024-10-30T14:00:23… \"Wasser lä… 2024-10-30T12:16:… #>  2 Beleuchtung/Uhren         2024-10-30T11:54:51… \"Abdeckung… 2024-10-30T12:28:… #>  3 Beleuchtung/Uhren         2024-10-30T11:53:55… \"Hegianwan… 2024-10-30T12:22:… #>  4 Abfall/Sammelstelle       2024-10-30T11:02:05… \"Abfall: D… 2024-10-30T10:50:… #>  5 Abfall/Sammelstelle       2024-10-30T11:02:05… \"Viel Abfa… 2024-10-30T10:47:… #>  6 Abfall/Sammelstelle       2024-10-30T13:56:03… \"Reinigung… 2024-10-30T10:33:… #>  7 Abfall/Sammelstelle       2024-10-30T13:57:57… \"MöbelStüc… 2024-10-30T08:39:… #>  8 Signalisation/Lichtsignal 2024-10-30T07:32:04… \"Fussgänge… 2024-10-30T07:24:… #>  9 VBZ/ÖV                    2024-10-30T13:52:38… \"Guten mor… 2024-10-30T09:02:… #> 10 Signalisation/Lichtsignal 2024-10-30T14:00:43… \"An der Am… 2024-10-30T05:55:… #> # ℹ 990 more rows #> # ℹ 10 more variables: agency_sent_datetime <chr>, service_name <chr>, #> #   detail <chr>, service_notice <chr>, title <chr>, status <chr>, #> #   service_request_id <int>, interface_used <chr>, media_url <chr>, #> #   geometry <POINT [°]> # }"},{"path":"https://ropengov.github.io/r311/reference/o311_services.html","id":null,"dir":"Reference","previous_headings":"","what":"Get service list — o311_services","title":"Get service list — o311_services","text":"Get list available services. Services unique endpoint / city thus require attached jurisdiction using o311_api.","code":""},{"path":"https://ropengov.github.io/r311/reference/o311_services.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get service list — o311_services","text":"","code":"o311_services(...)  o311_service(service_code, ...)"},{"path":"https://ropengov.github.io/r311/reference/o311_services.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get service list — o311_services","text":"... endpoint-specific parameters documented respective endpoint reference. service_code Identifier single service definition. Service codes can usually retrieved o311_services.","code":""},{"path":"https://ropengov.github.io/r311/reference/o311_services.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get service list — o311_services","text":"dataframe list containing information service.","code":""},{"path":"https://ropengov.github.io/r311/reference/o311_services.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get service list — o311_services","text":"","code":"# set up a jurisdiction o311_api(\"san francisco\") # \\donttest{ if (o311_ok()) {   # get a list of all services   services <- o311_services()    # inspect a service code   o311_service(services$service_code[1]) } #> # A tibble: 1 × 2 #>   service_code        attributes$variable $code       $datatype $required $order #>   <chr>               <lgl>               <chr>       <chr>     <lgl>      <int> #> 1 RPD:General:General TRUE                oform.rpd_… singleva… TRUE           1 #> # ℹ 2 more variables: attributes$description <chr>, $values <list> # }"},{"path":"https://ropengov.github.io/r311/reference/validate_endpoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate endpoints — validate_endpoints","title":"Validate endpoints — validate_endpoints","text":"Checks whether endpoints correctly defined, reachable, /valid. Iterates endpoints defined o311_endpoints returns status along reason, applicable.","code":""},{"path":"https://ropengov.github.io/r311/reference/validate_endpoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate endpoints — validate_endpoints","text":"","code":"validate_endpoints(   idx = NULL,   checks = c(\"discovery\", \"services\", \"requests\"),   methods = c(\"formal\", \"down\", \"valid\") )"},{"path":"https://ropengov.github.io/r311/reference/validate_endpoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate endpoints — validate_endpoints","text":"idx [integer] Index numbers endpoints check. Index numbers follow row numbers o311_endpoints. checks [character] open311 method check. default, checks methods. methods [character] checks apply. formal checks whether endpoint uniquely identifiable given names jurisdictions o311_endpoints. checks whether endpoint reachable ready requests. valid checks whether method returns valid output, .e. list dataframe 0 rows/elements. default, applies methods.","code":""},{"path":"https://ropengov.github.io/r311/reference/validate_endpoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate endpoints — validate_endpoints","text":"dataframe containing name endpoint, one three columns check results, one three columns reasons check turned negative.","code":""},{"path":"https://ropengov.github.io/r311/reference/validate_endpoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate endpoints — validate_endpoints","text":"","code":"# \\donttest{ # check the first three endpoints in o311_endpoints() validate_endpoints(1:3) #> Receiving endpoint 1 out of 3... Receiving endpoint 2 out of 3... Receiving endpoint 3 out of 3... #> # A tibble: 3 × 7 #>   name              discovery services requests reason_discovery reason_services #>   <chr>             <lgl>     <lgl>    <lgl>    <chr>            <lgl>           #> 1 Annaberg-Buchhol… TRUE      TRUE     TRUE     NA               NA              #> 2 Bloomington, IN   FALSE     TRUE     TRUE     API not reachab… NA              #> 3 Bonn, DE          FALSE     TRUE     TRUE     API not reachab… NA              #> # ℹ 1 more variable: reason_requests <lgl>  # check only requests validate_endpoints(1:3, checks = \"requests\") #> Receiving endpoint 1 out of 3... Receiving endpoint 2 out of 3... Receiving endpoint 3 out of 3... #> # A tibble: 3 × 3 #>   name                  requests reason_requests #>   <chr>                 <lgl>    <lgl>           #> 1 Annaberg-Buchholz, DE TRUE     NA              #> 2 Bloomington, IN       TRUE     NA              #> 3 Bonn, DE              TRUE     NA               # check only whether an endpoint is down validate_endpoints(1:3, methods = \"down\") #> Receiving endpoint 1 out of 3... Receiving endpoint 2 out of 3... Receiving endpoint 3 out of 3... #> # A tibble: 3 × 7 #>   name              discovery services requests reason_discovery reason_services #>   <chr>             <lgl>     <lgl>    <lgl>    <lgl>            <lgl>           #> 1 Annaberg-Buchhol… TRUE      TRUE     TRUE     NA               NA              #> 2 Bloomington, IN   TRUE      TRUE     TRUE     NA               NA              #> 3 Bonn, DE          TRUE      TRUE     TRUE     NA               NA              #> # ℹ 1 more variable: reason_requests <lgl> # }"},{"path":"https://ropengov.github.io/r311/news/index.html","id":"r311-037","dir":"Changelog","previous_headings":"","what":"r311 0.3.7","title":"r311 0.3.7","text":"CRAN release: 2024-07-16 Initial CRAN submission.","code":""}]
